{"version":3,"sources":["icons/logo.svg","constants.js","components/IconSVG.js","components/ScoreTable.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ICONS_ARRAY","ICONS","RULES","rock","paper","scissors","svgSources","IconSVG","_ref","name","react_default","a","createElement","className","concat","value","dangerouslySetInnerHTML","__html","defaultProps","ScoreTable","scores","_","map","score","index","key","Game","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","userChosenItem","computerChosenItem","userClicked","result","round","userScore","computerScore","handleUserClick","bind","assertThisInitialized","handleComputerLogic","nextRound","calculateResult","playGame","restartGame","setState","iconNames","randomItem","sample","_this2","_this$state","userChoiceItems","iconName","onClick","components_IconSVG","computerChoiceItems","components_ScoreTable","Component","App","renderComponent","handleClick","console","log","components_Game","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d3d8f35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f7eec7ae.svg\";","export const ICONS_ARRAY = [\"rock\", \"paper\", \"scissors\"];\n\nexport const ICONS = {\n  ROCK: `<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"80.000000pt\" height=\"100.000000pt\" viewBox=\"0 0 91.000000 90.000000\"\n  preserveAspectRatio=\"xMidYMid meet\">\n <metadata>\n Created by potrace 1.15, written by Peter Selinger 2001-2017\n </metadata>\n <g transform=\"translate(0.000000,90.000000) scale(0.100000,-0.100000)\"\n fill=\"#000000\" stroke=\"none\">\n <path d=\"M334 791 c-42 -19 -86 -68 -99 -108 -5 -17 -14 -23 -35 -23 -41 0\n -77 -16 -105 -46 -31 -34 -34 -106 -6 -143 18 -24 18 -25 -6 -60 -42 -61 -19\n -152 48 -189 16 -10 32 -27 35 -40 8 -30 56 -69 102 -82 54 -15 179 -12 245 5\n 109 28 195 82 253 157 18 23 46 46 64 52 54 18 75 56 75 134 0 95 -28 177 -76\n 225 -36 36 -43 39 -79 34 -35 -4 -48 0 -91 29 -101 68 -243 92 -325 55z m187\n -27 c104 -31 192 -93 226 -158 26 -49 43 -126 43 -192 0 -49 -5 -68 -28 -105\n -79 -123 -237 -196 -408 -187 -89 5 -141 27 -155 66 -8 21 -6 22 39 23 92 2\n 103 15 17 23 -44 3 -91 10 -105 14 -34 10 -64 72 -56 116 10 50 28 61 105 58\n 88 -3 112 13 31 21 -96 10 -129 35 -130 98 0 25 7 42 25 59 22 21 36 24 114\n 25 76 1 94 5 133 28 67 39 85 66 23 35 -60 -31 -135 -46 -135 -28 0 29 46 83\n 84 101 51 23 106 24 177 3z m282 -104 c32 -25 66 -113 73 -189 4 -43 1 -64\n -13 -90 -31 -60 -43 -51 -43 31 0 83 -20 162 -56 226 -23 39 -24 42 -6 42 11\n 0 31 -9 45 -20z\"/>\n </g>\n </svg>`,\n  PAPER: `<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"90.000000pt\" height=\"100.000000pt\" viewBox=\"0 0 130.000000 110.000000\"\n  preserveAspectRatio=\"xMidYMid meet\">\n <metadata>\n Created by potrace 1.15, written by Peter Selinger 2001-2017\n </metadata>\n <g transform=\"translate(0.000000,90.000000) scale(0.100000,-0.100000)\"\n fill=\"#000000\" stroke=\"none\">\n <path d=\"M775 1022 c-30 -14 -65 -49 -128 -130 -84 -106 -211 -242 -227 -242\n -4 0 -10 22 -12 49 -6 59 -35 118 -72 145 -21 16 -42 21 -91 21 -114 0 -132\n -51 -66 -191 l32 -67 -13 -99 c-10 -81 -15 -99 -31 -104 -27 -9 -50 -70 -42\n -113 27 -143 197 -287 266 -225 13 12 42 16 116 17 90 2 104 5 173 38 41 20\n 95 52 119 73 55 46 136 91 276 152 131 57 155 75 155 121 0 27 -6 37 -32 53\n -40 24 -75 25 -163 5 -37 -9 -72 -14 -79 -12 -6 2 43 39 109 83 136 90 150\n 110 122 170 -21 44 -92 79 -143 71 -19 -3 -75 -29 -125 -57 -50 -28 -93 -50\n -95 -47 -2 2 20 36 49 76 28 39 59 86 68 102 47 84 -65 158 -166 111z m102\n -23 c57 -21 57 -57 0 -131 -56 -72 -180 -264 -195 -303 -12 -30 -12 -30 15 5\n 53 68 100 106 213 170 126 72 168 80 216 44 64 -47 59 -68 -32 -128 -128 -85\n -237 -171 -270 -214 -48 -63 -42 -72 14 -21 46 43 50 45 176 68 115 22 132 23\n 155 10 29 -16 39 -51 19 -65 -7 -6 -81 -41 -164 -78 -101 -45 -176 -87 -227\n -125 -100 -76 -179 -111 -265 -118 -100 -8 -147 8 -209 73 -99 104 -116 167\n -92 340 11 80 11 81 -20 148 -17 37 -34 85 -37 106 -6 36 -4 40 20 50 65 24\n 134 -1 162 -58 10 -20 20 -67 22 -104 3 -55 7 -68 21 -68 27 0 146 115 245\n 238 104 130 120 146 156 161 33 13 43 13 77 0z m-638 -758 c18 -28 58 -73 88\n -101 42 -38 51 -51 39 -56 -48 -19 -147 64 -192 159 -28 62 -30 84 -7 116 l16\n 24 12 -45 c6 -25 26 -68 44 -97z\"/>\n </g>\n </svg>`,\n  SCISSORS: `<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"90.000000pt\" height=\"100.000000pt\" viewBox=\"0 0 122.000000 107.000000\"\n  preserveAspectRatio=\"xMidYMid meet\">\n <metadata>\n Created by potrace 1.15, written by Peter Selinger 2001-2017\n </metadata>\n <g transform=\"translate(0.000000,107.000000) scale(0.100000,-0.100000)\"\n fill=\"#000000\" stroke=\"none\">\n <path d=\"M345 879 c-75 -22 -80 -22 -140 -14 -72 10 -137 -54 -185 -182 -33\n -89 -23 -149 30 -181 18 -11 42 -43 60 -79 18 -36 54 -83 90 -117 127 -121\n 268 -152 414 -92 l70 29 140 -72 c78 -39 149 -71 159 -71 29 0 56 18 72 50 20\n 38 19 76 -4 126 -15 34 -36 52 -117 103 -92 57 -96 61 -64 61 19 0 72 -5 118\n -12 100 -14 126 -4 144 53 10 34 8 44 -13 85 -35 67 -72 83 -243 105 -77 10\n -144 19 -148 19 -5 0 -8 10 -9 23 -5 147 -175 223 -374 166z m220 -23 c60 -18\n 102 -58 116 -109 6 -21 8 -41 5 -44 -10 -10 -79 23 -119 57 l-41 35 19 -33\n c42 -71 102 -94 300 -117 71 -9 146 -20 166 -25 42 -11 74 -43 90 -88 9 -27 8\n -37 -6 -58 -14 -22 -22 -25 -53 -21 -145 20 -404 39 -413 30 -7 -7 9 -12 50\n -17 50 -6 79 -18 178 -78 141 -84 160 -100 175 -149 13 -47 -4 -97 -36 -105\n -14 -3 -70 20 -167 70 -99 50 -171 80 -223 91 -92 21 -121 15 -46 -10 30 -9\n 59 -21 63 -25 16 -15 -87 -45 -153 -45 -125 0 -270 96 -331 221 -38 76 -40\n 121 -10 201 46 122 112 184 228 214 84 22 145 23 208 5z m-345 -24 c0 -5 -14\n -21 -31 -38 -39 -36 -96 -148 -110 -214 -12 -56 -24 -63 -40 -22 -32 83 78\n 282 156 282 14 0 25 -4 25 -8z\"/>\n </g>\n </svg>`\n};\n\nexport const RULES = {\n  rock: \"scissors\",\n  paper: \"rock\",\n  scissors: \"paper\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ICONS } from \"./../constants\";\n\nconst svgSources = {};\nsvgSources.rock = ICONS.ROCK;\nsvgSources.paper = ICONS.PAPER;\nsvgSources.scissors = ICONS.SCISSORS;\n\nconst IconSVG = ({ name }) => {\n  if (name) {\n    return svgSources[name] ? (\n      <span\n        className={`icon svg-icon-${name}`}\n        value={name}\n        dangerouslySetInnerHTML={{ __html: svgSources[name] }}\n      />\n    ) : (\n      <span className={`icon icon-${name}`} />\n    );\n  }\n  return null;\n};\n\nIconSVG.defaultProps = {\n  name: \"\"\n};\n\nIconSVG.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nexport default IconSVG;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nfunction ScoreTable({ scores }) {\n  return (\n    <div className=\"row score-table\">\n      <table className=\"centered col s6\">\n        <thead>\n          <tr>\n            <th>Your scores</th>\n            <th>Computer Scores</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {_.map(scores, (score, index) => (\n              <td key={index}>{score}</td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ScoreTable;\n","import React, { Component } from \"react\";\nimport { ICONS_ARRAY, RULES } from \"../constants\";\nimport IconSVG from \"./IconSVG\";\nimport ScoreTable from \"./ScoreTable\";\nimport _ from \"lodash\";\n\nclass Game extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userChosenItem: \"\",\n      computerChosenItem: \"\",\n      userClicked: false,\n      result: \"\",\n      round: 1,\n      userScore: 0,\n      computerScore: 0\n    };\n    this.handleUserClick = this.handleUserClick.bind(this);\n    this.handleComputerLogic = this.handleComputerLogic.bind(this);\n    this.nextRound = this.nextRound.bind(this);\n    this.calculateResult = this.calculateResult.bind(this);\n    this.playGame = this.playGame.bind(this);\n    this.restartGame = this.restartGame.bind(this);\n  }\n\n  playGame(userChosenItem) {\n    let { userClicked } = this.state;\n    if (userClicked) {\n      return;\n    }\n    this.handleUserClick(userChosenItem);\n    let computerChosenItem = this.handleComputerLogic();\n    this.calculateResult(userChosenItem, computerChosenItem);\n  }\n\n  handleUserClick(userChosenItem) {\n    this.setState({ userChosenItem: userChosenItem, userClicked: true });\n  }\n\n  handleComputerLogic() {\n    const iconNames = ICONS_ARRAY;\n    const randomItem = _.sample(iconNames);\n    this.setState({ computerChosenItem: randomItem });\n    return randomItem;\n  }\n\n  calculateResult(userChosenItem, computerChosenItem) {\n    if (userChosenItem === computerChosenItem) {\n      this.setState({ result: \"Draw\" });\n      return;\n    } else if (RULES[userChosenItem] === computerChosenItem) {\n      this.setState({ result: \"You win\", userScore: this.state.userScore + 1 });\n      return;\n    }\n    return this.setState({\n      result: \"You lost\",\n      computerScore: this.state.computerScore + 1\n    });\n  }\n\n  nextRound() {\n    this.setState({\n      userChosenItem: \"\",\n      computerChosenItem: \"\",\n      userClicked: false,\n      result: \"\",\n      round: this.state.round + 1\n    });\n  }\n\n  restartGame() {\n    this.setState({\n      userChosenItem: \"\",\n      computerChosenItem: \"\",\n      userClicked: false,\n      result: \"\",\n      round: 1,\n      userScore: 0,\n      computerScore: 0\n    });\n  }\n\n  render() {\n    let {\n      userChosenItem,\n      computerChosenItem,\n      userClicked,\n      result,\n      round,\n      userScore,\n      computerScore\n    } = this.state;\n    const iconNames = ICONS_ARRAY;\n    const scores = [userScore, computerScore];\n    let userChoiceItems = _.map(iconNames, (iconName, index) => {\n      if (userChosenItem === \"\" || userChosenItem === iconName) {\n        return (\n          <div\n            className=\"col s12 m4\"\n            key={index}\n            onClick={() => this.playGame(iconName)}\n          >\n            <IconSVG name={iconName} />\n          </div>\n        );\n      } else {\n        return <div className=\"col s12 m4\" key={index} />;\n      }\n    });\n\n    let computerChoiceItems = _.map(iconNames, (iconName, index) => {\n      if (computerChosenItem === \"\" || computerChosenItem === iconName) {\n        return (\n          <div className=\"col s12 m4\" key={index}>\n            <IconSVG name={iconName} />\n          </div>\n        );\n      } else {\n        return <div className=\"col s12 m4\" key={index} />;\n      }\n    });\n\n    return (\n      <section className=\"game-section\">\n        <div>\n          <div className=\"row\">\n            <div className=\"col s5 icons-block\">\n              <h4 className=\"col s12 user-name\">You</h4>\n              <div className=\"choice-icons\">{userChoiceItems}</div>\n            </div>\n            <div className=\"col s2\">\n              <h5 className=\"col s12 teal accent-2 round\">Round {round}</h5>\n              <h4 className=\"col s12 game-result\">{result}</h4>\n            </div>\n            <div className=\"col s5\">\n              <h4 className=\"col s12 computer-name\">Computer</h4>\n              <div className=\"choice-icons\">{computerChoiceItems}</div>\n            </div>\n          </div>\n          <div className=\"game-button\">\n            {userClicked && (\n              <a\n                className=\"waves-effect waves-light btn-small next-round-btn\"\n                onClick={this.nextRound}\n              >\n                <i className=\"material-icons right\">navigate_next</i>Next Round\n              </a>\n            )}\n          </div>\n          <ScoreTable scores={scores} />\n          <div className=\"game-button\">\n            {(round > 1 || userClicked) && (\n              <a\n                className=\"waves-effect waves-light btn-small restart-btn\"\n                onClick={this.restartGame}\n              >\n                <i className=\"material-icons right\">replay</i>Restart game\n              </a>\n            )}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nimport logo from \"./icons/logo.svg\";\nimport Game from \"./components/Game\";\nimport \"./App.scss\";\nimport \"materialize-css/dist/css/materialize.min.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { renderComponent: false };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    console.log(\"APP event\");\n    this.setState({ renderComponent: !this.state.renderComponent });\n  }\n\n  render() {\n    const { renderComponent } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"app-header\">\n          <h1>Rock Paper Scissors</h1>\n        </header>\n        <main>\n          {renderComponent ? (\n            <Game />\n          ) : (\n            <img src={logo} className=\"app-logo\" alt=\"logo\" />\n          )}\n        </main>\n        <footer>\n          <div className=\"play-button\" onClick={this.handleClick}>\n            {renderComponent ? (\n              <a className=\"waves-effect waves-light btn-large\">\n                <i className=\"material-icons right\">exit_to_app</i>\n                quit\n              </a>\n            ) : (\n              <a className=\"waves-effect waves-light btn-large\">\n                <i className=\"material-icons right\">play_arrow</i>\n                play\n              </a>\n            )}\n          </div>\n          <span className=\"footer-text\">2018 &copy;</span>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}